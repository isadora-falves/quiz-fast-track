// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	output "quiz-fast-track/internal/usecases/ports/output"

	mock "github.com/stretchr/testify/mock"
)

// GetQuestionsUseCase is an autogenerated mock type for the GetQuestionsUseCase type
type GetQuestionsUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *GetQuestionsUseCase) Execute() []output.QuestionOutput {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 []output.QuestionOutput
	if rf, ok := ret.Get(0).(func() []output.QuestionOutput); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]output.QuestionOutput)
		}
	}

	return r0
}

// NewGetQuestionsUseCase creates a new instance of GetQuestionsUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetQuestionsUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetQuestionsUseCase {
	mock := &GetQuestionsUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
